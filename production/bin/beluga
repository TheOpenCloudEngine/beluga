#!/bin/bash
#####################################
# Beluga daemon start script
# @Author Sang Wook, Song
#####################################

source `dirname $0`/environment.sh

CONF=$server_home/conf
LIB=$server_home/lib
LOGS=$server_home/logs
OUTPUT_LOG=$LOGS/output.log

if [ -z "$java_path" ] ; then
	java_path=java
fi

# make log directory if not exists
mkdir -p $LOGS

JVM_OPTS="-Xms$heap_memory_size -Xmx$heap_memory_size -XX:+HeapDumpOnOutOfMemoryError -Djava.net.preferIPv4Stack=true"
JAVA_OPTS="$BELUGA_JAVA_OPTS -server -Dfile.encoding=UTF-8 -Dlogback.configurationFile=$CONF/logback.xml -Dderby.stream.error.file=$LOGS/db.log"
DEBUG_OPT="-agentlib:jdwp=transport=dt_socket,suspend=n,server=y,address=localhost:59090"
PROFILE_OPT_JMX="-verbosegc -XX:+PrintGCDetails -Dcom.sun.management.jmxremote"

ADDITIONAL_OPTS=

if [ "$1" = "debug" ] ; then
	
	ADDITIONAL_OPTS=$DEBUG_OPT
	
elif [ "$1" = "profile" ] ; then
	
	ADDITIONAL_OPTS=$PROFILE_OPT
	
fi

start_daemon() {
	# prevent killed by Hup, ctrl-c
	trap '' 1 2
	"$java_path" -Dserver.home=$server_home $JVM_OPTS $JAVA_OPTS $ADDITIONAL_OPTS -classpath $LIB/beluga-master-bootstrap.jar org.opencloudengine.garuda.beluga.server.Bootstrap start > $OUTPUT_LOG 2>&1 &
	PID=`echo "$!"`
	sleep 1
	if ps -p $PID > /dev/null
	then
		echo $PID > ".pid"
		echo "################################"
		echo "Start server PID = $PID"
		echo "$java_path -Dserver.home=$server_home $JVM_OPTS $JAVA_OPTS $ADDITIONAL_OPTS -classpath $LIB/beluga-master-bootstrap.jar org.opencloudengine.garuda.beluga.server.Bootstrap start > $OUTPUT_LOG 2>&1 &"
		echo "################################"
		#tail can be got signal ctrl-c
		trap - 2
		return 0
	else
		echo "[ERROR] Fail to start server. Check details at logs/output.log file."
		echo "---------------------------"
		tail -1 $OUTPUT_LOG
		echo "---------------------------"
	fi
	return 1
}

stop_daemon() {
	if [ -f ".pid" ] ; then
		PID=`cat ".pid"`
		if ps -p $PID > /dev/null
		then
			echo "################################"
			echo "Stop Daemon PID = $PID"
			ps -p "$PID"
			echo "kill $PID"
			echo "################################"
			kill "$PID"
			return 0
		else
			echo "Cannot find pid $PID to stop"
		fi
	else
		echo "Cannot stop daemon: .pid file not found"
		ps -ef|grep org.opencloudengine.garuda.beluga.server.Bootstrap|grep -v grep
	fi
	return 1
}

print_option() {
	echo "usage: $0 run | start | stop | restart | kill | debug | profile"
}

if [ "$1" = "run" ] ; then
	"$java_path" -Dserver.home=$server_home $JVM_OPTS $JAVA_OPTS -classpath $LIB/beluga-master-bootstrap.jar org.opencloudengine.garuda.beluga.server.Bootstrap start

elif [ "$1" = "start" ] || [ "$1" = "debug" ] || [ "$1" = "profile" ] ; then
	if(start_daemon)
	then 
		if [ "$2" != "notail" ] ; then
			tail -f $LOGS/system.log
		fi
	fi
elif [ "$1" = "stop" ] ; then
	if(stop_daemon) 
	then 
		if [ "$2" != "notail" ] ; then
			tail -f $LOGS/system.log
		fi
	fi
elif [ "$1" = "restart" ] ; then
		stop_daemon
		sleep 1
		if(start_daemon)
		then 
			if [ "$2" != "notail" ] ; then
				tail -f $LOGS/system.log
			fi
		fi
elif [ "$1" = "kill" ] ; then
	if [ -f ".pid" ] ; then
		PID=`cat ".pid"`
		if ps -p $PID > /dev/null
		then
			echo "################################"
			echo "Kill Daemon PID = $PID"
			ps -p "$PID"
			echo "kill -9 $PID"
			kill -9 "$PID"
			echo "################################"
		else
			echo "Cannot find pid $PID"
		fi
	else
		echo "Cannot kill daemon: .pid file not found"
		ps -ef|grep org.opencloudengine.garuda.beluga.server.Bootstrap|grep -v grep
	fi
	
elif [ -z "$1" ] ; then
	print_option
	
else
	echo "Unknown command : $1"
	print_option
fi



